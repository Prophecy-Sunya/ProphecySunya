FROM node:20-alpine AS builder
WORKDIR /app

# Install dependencies for building
RUN apk add --no-cache python3 make g++ git bash curl

# Install Scarb for Cairo contracts
ENV SCARB_VERSION=2.11.4
RUN mkdir -p /tmp/scarb && \
    cd /tmp/scarb && \
    curl -L https://github.com/software-mansion/scarb/releases/download/v${SCARB_VERSION}/scarb-v${SCARB_VERSION}-x86_64-unknown-linux-musl.tar.gz -o scarb.tar.gz && \
    tar -xzf scarb.tar.gz && \
    mv scarb-v${SCARB_VERSION}-x86_64-unknown-linux-musl /usr/local/scarb && \
    ln -s /usr/local/scarb/bin/scarb /usr/local/bin/scarb && \
    rm -rf /tmp/scarb

# Copy Cairo contracts and Scarb.toml for building
COPY contracts/ /app/contracts/
COPY src/ /app/src/
COPY Scarb.toml /app/

# Debug: Show Scarb.toml content
RUN echo "Scarb.toml content:" && cat /app/Scarb.toml

# Build Cairo contracts with verbose output
RUN scarb --version && scarb build --verbose

# Debug: List all generated artifacts
RUN echo "Generated artifacts:" && \
    find /app/target -type f | sort && \
    echo "Artifact file contents:" && \
    find /app/target -name "*.json" -exec cat {} \; || echo "No JSON files found"

# Create a new stage for deployment
FROM node:20-alpine
WORKDIR /app

# Install dependencies for debugging
RUN apk add --no-cache jq

# Copy the built artifacts from the builder stage
COPY --from=builder /app/target /app/target

# Create debug directory
RUN mkdir -p /app/temp_debug

# Copy package files for deployment scripts
COPY scripts/package.json scripts/tsconfig.json /app/scripts/

# Install script dependencies
WORKDIR /app/scripts
RUN npm install

# Copy the deployment script
WORKDIR /app

# Debug: Examine artifact file before deployment
RUN echo "Preparing for deployment..." && \
    echo "Target directory structure:" && \
    find /app/target -type f | sort && \
    echo "Checking for artifact file:" && \
    find /app/target -name "*.json" -exec sh -c 'echo "Found JSON file: {}"; cat {} | jq "." || echo "Not valid JSON: {}"' \;

# Copy the deployment script at the very end
COPY scripts/deploy.ts /app/scripts/

# Run deployment with debug output
CMD ["sh", "-c", "echo 'Target directory contents:' && ls -la /app/target && find /app/target -type f -name '*.json' -exec sh -c 'echo \"Contents of {}\"; cat {} | jq \".\" || cat {}' \\; && cd /app/scripts && npm run deploy"]
