FROM ghcr.io/foundry-rs/foundry:latest as foundry
FROM node:18 as deployer
# Install dependencies
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    pkg-config \
    libssl-dev \
    wget \
    && rm -rf /var/lib/apt/lists/*
# Install Rust and Cargo
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"
# Install Scarb directly (without using the installer script)
RUN mkdir -p /usr/local/scarb && \
    wget -q https://github.com/software-mansion/scarb/releases/download/v2.11.4/scarb-v2.11.4-x86_64-unknown-linux-gnu.tar.gz && \
    tar -xzf scarb-v2.11.4-x86_64-unknown-linux-gnu.tar.gz -C /usr/local/scarb --strip-components=1 && \
    rm scarb-v2.11.4-x86_64-unknown-linux-gnu.tar.gz && \
    ln -s /usr/local/scarb/bin/scarb /usr/local/bin/scarb
# Verify Scarb installation
RUN scarb --version
# Set up working directory
WORKDIR /app

# Copy package.json and install dependencies
COPY scripts/package.json scripts/
RUN cd scripts && npm install

# Copy the rest of the application
COPY . .

# Build the contracts first - THIS IS THE KEY FIX
RUN scarb build

# Verify build artifacts exist
RUN ls -la target/dev || (echo "Build failed to generate artifacts" && exit 1)

# Set up the entrypoint
COPY docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh
ENTRYPOINT ["docker-entrypoint.sh"]

# Default command
CMD ["node", "scripts/deploy.js"] run deploy"]
