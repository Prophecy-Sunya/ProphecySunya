version: '3.8'
services:
  # Starknet Devnet for local development
  starknet-devnet:
    image: shardlabs/starknet-devnet:latest
    ports:
      - "5050:5050"
    command: --seed 42 --accounts 3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5050/is_alive"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - starknet-devnet-data:/data

  # Contract deployment service with build step
  contract-deployer:
    build:
      context: .
      dockerfile: Dockerfile.deployer
    volumes:
      - ./contract-addresses:/app/contract-addresses
      - ./target:/app/target
    environment:
      - STARKNET_NETWORK=devnet
      - STARKNET_RPC_URL=http://starknet-devnet:5050
    depends_on:
      starknet-devnet:
        condition: service_healthy

  # Frontend application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    command: frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_STARKNET_NETWORK=devnet
      - NEXT_PUBLIC_PROVIDER_URL=http://starknet-devnet:5050
    volumes:
      - contract-addresses:/app/contract-addresses:ro
    depends_on:
      contract-deployer:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    entrypoint: ["/bin/bash", "-c", "source /app/load-contract-addresses.sh && exec /entrypoint.sh frontend"]
volumes:
  starknet-devnet-data:
  contract-addresses:ses:
